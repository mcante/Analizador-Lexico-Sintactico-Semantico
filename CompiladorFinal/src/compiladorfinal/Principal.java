/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package compiladorfinal;

import java.awt.Desktop;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.StringReader;
import java.util.HashSet;
import java_cup.runtime.Scanner;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author MrCante
 */
public class Principal extends javax.swing.JFrame {

    /**
     * Creates new form Principal
     */
    
    String Entrada="";
    String If="";
    String While="";
    int conta=0;
    String [][]ts =new String [100][7]; //Array en donde se almacena en forma temporal todos los ID encontrados
    
    public Principal() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TxtEntrada = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        BtnAnalziar = new javax.swing.JButton();
        BtnIf = new javax.swing.JButton();
        BtnWhile = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        TblTS = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        BtnMostrarArbol = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        BtnCreditos = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        TxtErrores = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        TxtErroresLexicos = new javax.swing.JTextArea();
        LblResultado = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Instrucciones");

        TxtEntrada.setColumns(20);
        TxtEntrada.setRows(5);
        TxtEntrada.setText("imprimir(\"Hola Melvin\");\nimprimir(\"Adios Melvin\");\n");
        jScrollPane1.setViewportView(TxtEntrada);

        jLabel2.setFont(new java.awt.Font("Comic Sans MS", 0, 24)); // NOI18N
        jLabel2.setText("ANALIZADOR LÉXICO Y SINTÁCTICO");

        BtnAnalziar.setBackground(new java.awt.Color(0, 51, 255));
        BtnAnalziar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        BtnAnalziar.setForeground(new java.awt.Color(255, 255, 255));
        BtnAnalziar.setText("Analizar");
        BtnAnalziar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnAnalziarActionPerformed(evt);
            }
        });

        BtnIf.setText("IF");
        BtnIf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnIfActionPerformed(evt);
            }
        });

        BtnWhile.setText("WHILE");
        BtnWhile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnWhileActionPerformed(evt);
            }
        });

        TblTS.setFont(new java.awt.Font("Comic Sans MS", 0, 11)); // NOI18N
        TblTS.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "TOKEN", "PR", "IDENTIFICADOR", "CADENA", "NUMERO", "SIMBOLO", "TIPO"
            }
        ));
        jScrollPane3.setViewportView(TblTS);

        jLabel4.setFont(new java.awt.Font("Comic Sans MS", 3, 18)); // NOI18N
        jLabel4.setText("Tabla de Simbolos");

        BtnMostrarArbol.setBackground(new java.awt.Color(0, 51, 255));
        BtnMostrarArbol.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        BtnMostrarArbol.setForeground(new java.awt.Color(255, 255, 255));
        BtnMostrarArbol.setText("Mostrar Árbol");
        BtnMostrarArbol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnMostrarArbolActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        jLabel5.setText("By Melvin Canté");

        BtnCreditos.setBackground(new java.awt.Color(0, 255, 255));
        BtnCreditos.setText("Créditos");
        BtnCreditos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnCreditosActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Errores Sintácticos Detectados:");

        TxtErrores.setColumns(20);
        TxtErrores.setRows(5);
        jScrollPane2.setViewportView(TxtErrores);

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setText("Errores Léxicos Detectados:");

        TxtErroresLexicos.setColumns(20);
        TxtErroresLexicos.setRows(5);
        jScrollPane4.setViewportView(TxtErroresLexicos);

        LblResultado.setBackground(new java.awt.Color(255, 204, 153));
        LblResultado.setText("RESULTADO:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 384, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(BtnIf)
                                .addComponent(BtnWhile)))
                        .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(BtnAnalziar, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(33, 33, 33)
                            .addComponent(BtnMostrarArbol))
                        .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane4))
                    .addComponent(jLabel6)
                    .addComponent(LblResultado, javax.swing.GroupLayout.PREFERRED_SIZE, 384, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 464, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(49, 49, 49))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(75, 75, 75)
                                .addComponent(BtnCreditos))
                            .addComponent(jLabel5))
                        .addGap(57, 57, 57))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(BtnIf)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(BtnWhile))
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(1, 1, 1)
                                .addComponent(LblResultado)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(BtnAnalziar, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(BtnMostrarArbol, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(3, 3, 3)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane3))
                        .addGap(0, 28, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jLabel4)
                        .addContainerGap())))
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BtnCreditos)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BtnAnalziarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnAnalziarActionPerformed
        
        Entrada = TxtEntrada.getText(); //CARGAR TEXTO EN VARIABBLE
        
        //REVISAR GRAMATICA
        try {
            new parser(new Lexico(new BufferedReader(new StringReader(Entrada)))).parse();
            mostrarListas();//MOSTRAR EL VALOR DE LAS LINKEDLIST DE CADA           
            LblResultado.setText("RESULTADO: COMPILADO CON ÉXITO");
        }
        catch (Exception ex) {
            System.out.println("RESULTADO: NO SE HA PODIDO COMPILAR");
            LblResultado.setText("RESULTADO: NO SE HA PODIDO COMPILAR");
            
            TxtErroresLexicos.setText(""+Lexico.ErroresLexicos);
            TxtErrores.setText("" + parser.Errores);
        }

    }//GEN-LAST:event_BtnAnalziarActionPerformed
    
    //LISTAS PARA GENERAR TABLA DE SIMBOLOS
    public void mostrarListas(){

        //ELIMINAR DUPLICADOS CON HasSet, se le pasa la lista, se limpia la lista antigua y luego se recarga la nueva lista
        // TOKEN - PR - IDENTIFICADOR - CADENA - NUMERO - SIMBOLO - TIPO
        //PALABRAS RESERVADAS
        HashSet<String> hashSet = new HashSet<String>(parser.PalabraReservada);
	parser.PalabraReservada.clear();
	parser.PalabraReservada.addAll(hashSet);
		
        for(String cadena : parser.PalabraReservada){
            System.out.println(conta + " Palabra Reservada: " + cadena);
            ts[conta][0] = conta+ ". " + cadena; ts[conta][1] = "x"; 
            ts[conta][2] = ""; ts[conta][3] = ""; ts[conta][4] = ""; ts[conta][5] = ""; ts[conta][6] = "";
            conta++;
        }
        
        //VALORES VARIABLES
        HashSet<String> hashSet5 = new HashSet<String>(parser.Variables);
	parser.Variables.clear();
	parser.Variables.addAll(hashSet5);
		
        for(String cadena : parser.Variables){
            System.out.println(conta + " Variables: " + cadena);
            ts[conta][0] = conta+ ". " + cadena; ts[conta][2] = "x"; ts[conta][6] = "";
            ts[conta][1] = ""; ts[conta][3] = ""; ts[conta][4] = ""; ts[conta][5] = ""; ts[conta][6] = "";
            conta++;
        }
        
        // TOKEN - PR - IDENTIFICADOR - CADENA - NUMERO - SIMBOLO - TIPO
        //CADENAS
        HashSet<String> hashSet3 = new HashSet<String>(parser.Cadenas);
	parser.Cadenas.clear();
	parser.Cadenas.addAll(hashSet3);
		
        for(String cadena : parser.Cadenas){
            System.out.println(conta + " Cadena: " + cadena);
            ts[conta][0] = conta+ ". " + cadena; ts[conta][3] = "x"; ts[conta][6] = "String";
            ts[conta][2] = ""; ts[conta][1] = ""; ts[conta][4] = ""; ts[conta][5] = ""; 
            conta++;
        }
        
        
        //VALORES NUMÉRICOS
        HashSet<String> hashSet4 = new HashSet<String>(parser.ValoresNumericos);
	parser.ValoresNumericos.clear();
	parser.ValoresNumericos.addAll(hashSet4);
		
        for(String cadena : parser.ValoresNumericos){
            System.out.println(conta + " Valores numéricos: " + cadena);
            ts[conta][0] = conta+ ". " + cadena; ts[conta][4] = "x"; ts[conta][6] = "Float";
            ts[conta][2] = ""; ts[conta][3] = ""; ts[conta][1] = ""; ts[conta][5] = "";
            conta++;
        }

        //SIMBOLOS
        HashSet<String> hashSet2 = new HashSet<String>(parser.Simbolo);
	parser.Simbolo.clear();
	parser.Simbolo.addAll(hashSet2);
		
        for(String cadena : parser.Simbolo){
            System.out.println(conta + " Simbolo: " + cadena);
            ts[conta][0] = conta+ ". " + cadena; ts[conta][5] = "x";
            ts[conta][2] = ""; ts[conta][3] = ""; ts[conta][4] = ""; ts[conta][1] = ""; ts[conta][6] = "";
            conta++;
        }
        
        // TOKEN - PR - IDENTIFICADOR - CADENA - NUMERO - SIMBOLO - TIPO
        for (int i = 0; i < conta-1; i++) {
            System.out.println("Token: " + ts[i][0] + " TR: " + ts[i][1] + " IDENT: " + ts[i][2] + " CADENA: " + ts[i][3] + " NUMERO: " + ts[i][4] + " SIMBOLO: " + ts[i][5] + " TIPO: " + ts[i][6]);
        }
        
        cargarTabla();
    }
    
    public void cargarTabla(){
        DefaultTableModel modelo = (DefaultTableModel) TblTS.getModel();
        
        Object[] miTabla = new Object[7]; //Creo un Objeto de tres campos
        for (int i = 0; i < conta-1; i++) {
            
            miTabla[0] = ts[i][0]; //token
            miTabla[1] = ts[i][1]; //palabra reservada
            miTabla[2] = ts[i][2]; //identificador
            miTabla[3] = ts[i][3]; //cadena
            miTabla[4] = ts[i][4]; //numero
            miTabla[5] = ts[i][5]; //simbolo
            miTabla[6] = ts[i][6]; //tipo
            modelo.addRow(miTabla); //Se agrega un nuevo registro a la tabla y se envia el objeto creado
            TblTS.setModel(modelo); //se pasa el modelo a la tabla...   
        }
    }
    
    //RECORRER ARBOL
    public static String recorrido(Nodo raiz){
        String cuerpo="";
        for (Nodo hijos : raiz.getHijos()) {
            
            cuerpo += "\"" + raiz.getIdNod() + "." + raiz.getEtiqueta() + "=" + raiz.getValor() + "\"->\"" + hijos.getIdNod() + "." + hijos.getEtiqueta() + "=" + hijos.getValor() + "\"";
            //System.out.println("Cuerpo: " + cuerpo);
            cuerpo += recorrido(hijos);            
        }
        return cuerpo;
    }
    
    //TRADUCIR A GRAPHVIZ
    public void graficar(Nodo raiz){
        FileWriter archivo = null;
        PrintWriter pw = null;
        String cadena = recorrido(raiz);
        
        try{
            archivo = new FileWriter("src/Salida/arbol.dot");
            pw = new PrintWriter(archivo);
            pw.println("digraph G {node[shape=octagon, style=filled, color=blanchedalmond]; edge[color=chocolate3];rankdir=UD \n");
            pw.println(cadena);
            pw.println("\n}");
            archivo.close();
            System.out.println("Arbol Generado con exito");
        }catch (Exception e) {
            System.out.println(e +" 1");
        }
        
        try {
            String dotPath = "c:\\Program Files (x86)\\Graphviz2.38\\bin\\dot.exe"; //RUTA DE GRAPHVIZ
            String cmd = dotPath + " -Tpng src/Salida/arbol.dot -o src/Salida/arbol.png";
            Runtime.getRuntime().exec(cmd);
        } catch (IOException ioe) {
            System.out.println(ioe +" 2");
        }
        
    }
    
    
    
    private void BtnIfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnIfActionPerformed
        If="if(num<1){\n" + "	imprimir(\"Hola Melvin\");\n" + "}\n" + "else{\n" + "	imprimir(\"Adios Melvin\");\n" + "}";
        TxtEntrada.setText(If);
    }//GEN-LAST:event_BtnIfActionPerformed

    private void BtnWhileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnWhileActionPerformed
        While="while (a>1){\n imprimir(\"Ciclo While\");\n} ";
        TxtEntrada.setText(While);
    }//GEN-LAST:event_BtnWhileActionPerformed

    private void BtnMostrarArbolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnMostrarArbolActionPerformed
        
        //GENERAR ARBOL A PARTIR DE LOS NODOS
        try {
            Nodo raiz = parser.padre; //VARIABLE raiz DEL TIPO NODO PADRE QUE SE ENCUENTRA EN EL PARSER
            String resultado = recorrido(raiz);
            System.out.println("Resultados: " + resultado);
            graficar(raiz); //LLAMAR AL TRADUCTOR DE GRAPHVIZ
        } catch (Exception e) {
            System.out.println("NO SE HA PODIDO GENERAR EL ARBOL " + e);
        }
        
        //LA IMAGEN ES LLAMADA CON EL VISOR POR DEFECTO DEL SISTEMA
        try{
            Desktop.getDesktop().open(new File("src/Salida/arbol.png"));            
        }catch (IOException e){
            JOptionPane.showMessageDialog(null, "Error al intentar abrir la imagen " + e);
        }
    }//GEN-LAST:event_BtnMostrarArbolActionPerformed

    private void BtnCreditosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnCreditosActionPerformed
        Creditos mostrar = new Creditos();
        mostrar.setVisible(true);
        
        dispose();
    }//GEN-LAST:event_BtnCreditosActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnAnalziar;
    private javax.swing.JButton BtnCreditos;
    private javax.swing.JButton BtnIf;
    private javax.swing.JButton BtnMostrarArbol;
    private javax.swing.JButton BtnWhile;
    private javax.swing.JLabel LblResultado;
    private javax.swing.JTable TblTS;
    private javax.swing.JTextArea TxtEntrada;
    private javax.swing.JTextArea TxtErrores;
    private javax.swing.JTextArea TxtErroresLexicos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    // End of variables declaration//GEN-END:variables

}
